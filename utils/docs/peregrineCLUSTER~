	LOGGIN
ssh -X s3021610@peregrine.hpc.rug.nl
ssh s3021610@peregrine.hpc.rug.nl

	COPY THE PUBLIC KEY (SSH)
ssh-copy-id s3021610@peregrine.hpc.rug.nl

	TRANSFER FILES TO BE SYNC - PUSH
	you can sync the dir1 folder from earlier to a remote computer by using this syntax (note that we want to transfer the actual directory in this case, so we omit the trailing slash):
rsync -aPv TFG/ s3021610@peregrine.hpc.rug.nl:/data/s3021610/TFG/

	PULL (FROM SERVER TO LOCAL)
rsync -aPv s3021610@peregrine.hpc.rug.nl:/data/s3021610/TFG/ /home/pedro/TFG/

	restore all added modules, e.g. to allow GIT work there
module restore

	show the last lines of a file
tail slurm-5822544.out

	show the amount of data
lfs quota -h /data

	submit a job
sbatch python_batch.sh

	move the .out generated by the cluster to the correspond folder
mv *.out models/foodCAT_VGG_ILSVRC_19_layers/LOGS/

############################### IMPORTANT

	PULL PRESERVING THE NEW CHANGES IN LOCAL (USING -u)
rsync -aPv -u s3021610@peregrine.hpc.rug.nl:/data/s3021610/TFG/ /home/pedro/TFG/

	PUSH DELETING IN REMOTE WHAT YOU DELETED IN LOCAL (after run the follow command, run it again without the flag -n. With that is just a simulation)
rsync -aPv --delete -n TFG/ s3021610@peregrine.hpc.rug.nl:/data/s3021610/TFG/

############################### END IMPORTANT




	OPTIONS
	In order to keep two directories truly in sync, it is necessary to delete files from the destination directory if they are removed from the source. By default, rsync does not delete anything 		from the destination directory.

	We can change this behavior with the --delete option. Before using this option, use the --dry-run option and do testing to prevent data loss:
rsync -a --delete source destination

	If you wish to exclude certain files or directories located inside a directory you are syncing, you can do so by specifying them in a comma-separated list following the --exclude= option:
rsync -a --exclude=pattern_to_exclude source destination

	If we have specified a pattern to exclude, we can override that exclusion for files that match a different pattern by using the --include= option.
rsync -a --exclude=pattern_to_exclude --include=pattern_to_include source destination
